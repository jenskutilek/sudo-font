<?xml version="1.0" encoding="UTF-8"?>
<ttFont ttLibVersion="4.58">

  <prep>
    <assembly>
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 7 values pushed */
      2 9 3 10 50 5 2
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 7 values pushed */
      2 9 3 10 50 5 4
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 7 values pushed */
      2 9 6 10 50 5 6
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 7 values pushed */
      2 9 0 10 50 5 8
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 7 values pushed */
      2 9 0 10 50 5 10
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 7 values pushed */
      2 9 0 10 50 5 12
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 4 values pushed */
      3 7 50 5
      PUSHW[ ]	/* 1 value pushed */
      640
      PUSHB[ ]	/* 4 values pushed */
      8 2 2 14
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      WS[ ]	/* WriteStore */
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 6 values pushed */
      70 7 7 1 6 64
      WS[ ]	/* WriteStore */
      GETINFO[ ]	/* GetInfo */
      WS[ ]	/* WriteStore */
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      35
      GTEQ[ ]	/* GreaterThanOrEqual */
      PUSHB[ ]	/* 1 value pushed */
      7
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      64
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      JROF[ ]	/* JumpRelativeOnFalse */
      PUSHB[ ]	/* 1 value pushed */
      9
      PUSHW[ ]	/* 1 value pushed */
      4096
      PUSHB[ ]	/* 3 values pushed */
      8 8 32
      GETINFO[ ]	/* GetInfo */
      WS[ ]	/* WriteStore */
      RS[ ]	/* ReadStore */
      EQ[ ]	/* Equal */
      JROF[ ]	/* JumpRelativeOnFalse */
      PUSHB[ ]	/* 2 values pushed */
      48 6
      PUSHW[ ]	/* 1 value pushed */
      256
      WS[ ]	/* WriteStore */
      JMPR[ ]	/* Jump */
      PUSHB[ ]	/* 1 value pushed */
      9
      PUSHW[ ]	/* 2 values pushed */
      1056 16384
      PUSHB[ ]	/* 1 value pushed */
      8
      PUSHW[ ]	/* 1 value pushed */
      6240
      GETINFO[ ]	/* GetInfo */
      WS[ ]	/* WriteStore */
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      EQ[ ]	/* Equal */
      JROF[ ]	/* JumpRelativeOnFalse */
      PUSHB[ ]	/* 2 values pushed */
      20 6
      PUSHW[ ]	/* 1 value pushed */
      320
      WS[ ]	/* WriteStore */
      JMPR[ ]	/* Jump */
      PUSHB[ ]	/* 1 value pushed */
      7
      PUSHW[ ]	/* 2 values pushed */
      3104 16384
      MUL[ ]	/* Multiply */
      PUSHB[ ]	/* 1 value pushed */
      8
      RS[ ]	/* ReadStore */
      EQ[ ]	/* Equal */
      JROF[ ]	/* JumpRelativeOnFalse */
      PUSHB[ ]	/* 1 value pushed */
      6
      PUSHW[ ]	/* 1 value pushed */
      256
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 7 values pushed */
      54 64 6 5 17 1 6
      RS[ ]	/* ReadStore */
      WCVTP[ ]	/* WriteCVTInPixels */
      WS[ ]	/* WriteStore */
      RS[ ]	/* ReadStore */
      EQ[ ]	/* Equal */
      JROF[ ]	/* JumpRelativeOnFalse */
      PUSHB[ ]	/* 2 values pushed */
      46 5
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      21
      LT[ ]	/* LessThan */
      JROF[ ]	/* JumpRelativeOnFalse */
      PUSHB[ ]	/* 4 values pushed */
      7 9 9 5
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      WS[ ]	/* WriteStore */
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      93
      LT[ ]	/* LessThan */
      JROF[ ]	/* JumpRelativeOnFalse */
      PUSHB[ ]	/* 3 values pushed */
      10 9 64
      WS[ ]	/* WriteStore */
      JMPR[ ]	/* Jump */
      PUSHB[ ]	/* 2 values pushed */
      9 9
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      6
      SUB[ ]	/* Subtract */
      ROUND[01]	/* Round */
      WS[ ]	/* WriteStore */
      PUSHW[ ]	/* 1 value pushed */
      -52
      PUSHB[ ]	/* 4 values pushed */
      5 1 5 5
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      9
      RS[ ]	/* ReadStore */
      WCVTP[ ]	/* WriteCVTInPixels */
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      JMPR[ ]	/* Jump */
      PUSHB[ ]	/* 2 values pushed */
      44 6
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      64
      GT[ ]	/* GreaterThan */
      JROF[ ]	/* JumpRelativeOnFalse */
      PUSHB[ ]	/* 2 values pushed */
      36 5
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      21
      LT[ ]	/* LessThan */
      JROF[ ]	/* JumpRelativeOnFalse */
      PUSHW[ ]	/* 1 value pushed */
      -42
      PUSHB[ ]	/* 8 values pushed */
      5 1 5 5 10 10 10 5
      RS[ ]	/* ReadStore */
      RCVT[ ]	/* ReadCVT */
      WS[ ]	/* WriteStore */
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      6
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      ROUND[01]	/* Round */
      PUSHB[ ]	/* 1 value pushed */
      6
      RS[ ]	/* ReadStore */
      DIV[ ]	/* Divide */
      WS[ ]	/* WriteStore */
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      10
      RS[ ]	/* ReadStore */
      WCVTP[ ]	/* WriteCVTInPixels */
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      JMPR[ ]	/* Jump */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      4096
      MUL[ ]	/* Multiply */
      NEG[ ]	/* Negate */
      PUSHW[ ]	/* 1 value pushed */
      15000
      ADD[ ]	/* Add */
      PUSHW[ ]	/* 1 value pushed */
      6400
      DIV[ ]	/* Divide */
      PUSHB[ ]	/* 1 value pushed */
      10
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      0 10
      RS[ ]	/* ReadStore */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
        PUSHB[ ]	/* 1 value pushed */
        0
      ELSE[ ]	/* Else */
        PUSHB[ ]	/* 1 value pushed */
        10
        RS[ ]	/* ReadStore */
      EIF[ ]	/* EndIf */
      SCVTCI[ ]	/* SetCVTCutIn */
      PUSHB[ ]	/* 1 value pushed */
      13
      SMD[ ]	/* SetMinimumDistance */
      PUSHB[ ]	/* 1 value pushed */
      9
      SDB[ ]	/* SetDeltaBaseInGState */
    </assembly>
  </prep>

</ttFont>
